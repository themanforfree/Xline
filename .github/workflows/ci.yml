name: CI

on:
  pull_request:
    branches: [master]

env:
  CI_RUST_TOOLCHAIN: 1.61.0

jobs:
  outdated:
    name: Outdated
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/install@v0.1
        with:
          crate: cargo-outdated
          version: latest
      - run: cargo outdated

  audit:
    name: Audit
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        crate: cargo-audit
        use-tool-cache: true
    - uses: actions-rs/audit-check@v1.2.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - run: sudo apt install -y libprotobuf-dev protobuf-compiler
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: ${{ env.CI_RUST_TOOLCHAIN }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check
  
  fmt:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: ${{ env.CI_RUST_TOOLCHAIN }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
  
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - run: sudo apt install -y cmake g++ libprotobuf-dev protobuf-compiler
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: ${{ env.CI_RUST_TOOLCHAIN }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - run: sudo apt install -y cmake g++ libprotobuf-dev protobuf-compiler
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: ${{ env.CI_RUST_TOOLCHAIN }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features -- -D warnings

  becnmark:
    name: benchmark
    runs-on: ubuntu-latest
    steps:
      - run: sudo apt install -y cmake g++ libprotobuf-dev protobuf-compiler
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: etcd-io/etcd
          ref: v3.5.5
          path: etcd
      - uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: ${{ env.CI_RUST_TOOLCHAIN }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - uses: actions/setup-go@v3
      - run: |
          cd etcd
          bash ./build.sh
          go build ./tools/benchmark
          cd ../benchmark
          mv ../target/release/xline .
          mv ../etcd/benchmark .
          mv ../etcd/bin/etcd .
          mv ../etcd/bin/etcdctl .
          docker build . -t xline 
          bash ./benchmark.sh
      - uses: actions/upload-artifact@v1
        with:
          name: benchmark-output
          path: benchmark/out
